name: CREATOR workflow CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write
  pages: write      # to deploy to Pages
  id-token: write   # to verify the deployment originates from an appropriate source

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build CREATOR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build static files
        id: build
        run: ./mk_min.sh
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  creator-checker:
    name: Execute CREATOR Checker
    needs: build
  
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: pyTooling/download-artifact@v4
        with:
          name: github-pages
          tarball-name: artifact.tar
          path: .
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - run: npm run test-creator-node
    
  deploy-pages-beta:
    name: Deploy CREATOR to GitHub Pages (development)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request' && github.repository != 'creatorsim/creator'
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
    
  deploy-pages-stable:
    name: Deploy CREATOR to GitHub Pages (stable)
    runs-on: ubuntu-latest
    needs: creator-checker
    if: github.event_name != 'pull_request' && github.repository == 'creatorsim/creator'
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  build-creator-cl:    
    name: Build creator_cl Docker Image
    needs: creator-checker
    if: github.event_name != 'pull_request'

    runs-on: ubuntu-latest

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true
    - uses: pyTooling/download-artifact@v4
      with:
        name: github-pages
        tarball-name: artifact.tar
        path: .
    - name: Set up QEMU        
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:qemu-v7.0.0-28
    - name: Set up Docker Buildx        
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Package Registry        
      run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build & Push Docker image
      run:  cd ./dockers/command_line/ && docker buildx build -t ghcr.io/${{ github.repository_owner }}/creator_cl:${GITHUB_SHA} -t ghcr.io/${{ github.repository_owner }}/creator_cl  -f ./Dockerfile  --push --platform=linux/amd64,linux/arm64,linux/arm/v7 .

  push-creator-cl:    
    name: Push creator_cl Docker Image
    needs: build-creator-cl
    if: github.event_name != 'pull_request' && github.repository == 'creatorsim/creator'

    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub        
      env:          
        DH_TOKEN: ${{ secrets.DOCKER_HUB_PASSWORD }}               
      run: docker login -u creatorsim -p ${DH_TOKEN}
    - name: Re-tag & Push Docker Image to Docker Hub        
      run: |          
        chmod +r $HOME/.docker/config.json
        docker container run --rm --network host -v regctl-conf:/home/appuser/.regctl/ -v $HOME/.docker/config.json:/home/appuser/.docker/config.json regclient/regctl:v0.3.9 image copy ghcr.io/${{ github.repository_owner }}/creator_cl:${GITHUB_SHA}  docker.io/creatorsim/creator_cl:${GITHUB_SHA}
        docker container run --rm --network host -v regctl-conf:/home/appuser/.regctl/ -v $HOME/.docker/config.json:/home/appuser/.docker/config.json regclient/regctl:v0.3.9 image copy ghcr.io/${{ github.repository_owner }}/creator_cl docker.io/creatorsim/creator_cl
        
  build-creator-gateway:    
    name: Build creator_gateway Docker Image
    needs: creator-checker
    if: github.event_name != 'pull_request'

    runs-on: ubuntu-latest

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true
    - uses: pyTooling/download-artifact@v4
      with:
        name: github-pages
        tarball-name: artifact.tar
        path: .
    - name: Set up QEMU        
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:qemu-v7.0.0-28
    - name: Set up Docker Buildx        
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Package Registry        
      run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build & Push Docker image
      run:  cd ./dockers/gateway/ && docker buildx build -t ghcr.io/${{ github.repository_owner }}/creator_gateway:${GITHUB_SHA} -t ghcr.io/${{ github.repository_owner }}/creator_gateway -f ./Dockerfile  --push --platform=linux/amd64,linux/arm64,linux/arm/v7 .

  push-creator-gateway:    
    name: Push creator_gateway Docker Image
    needs: build-creator-gateway
    if: github.event_name != 'pull_request' && github.repository == 'creatorsim/creator'

    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub        
      env:          
        DH_TOKEN: ${{ secrets.DOCKER_HUB_PASSWORD }}               
      run: docker login -u creatorsim -p ${DH_TOKEN}
    - name: Re-tag & Push Docker Image to Docker Hub        
      run: |          
        chmod +r $HOME/.docker/config.json
        docker container run --rm --network host -v regctl-conf:/home/appuser/.regctl/ -v $HOME/.docker/config.json:/home/appuser/.docker/config.json regclient/regctl:v0.3.9 image copy ghcr.io/${{ github.repository_owner }}/creator_gateway:${GITHUB_SHA}  docker.io/creatorsim/creator_gateway:${GITHUB_SHA}
        docker container run --rm --network host -v regctl-conf:/home/appuser/.regctl/ -v $HOME/.docker/config.json:/home/appuser/.docker/config.json regclient/regctl:v0.3.9 image copy ghcr.io/${{ github.repository_owner }}/creator_gateway docker.io/creatorsim/creator_gateway

  build-creator-hw-lab:    
    name: Build creator_remote_lab Docker Image
    needs: creator-checker
    if: github.event_name != 'pull_request'

    runs-on: ubuntu-latest

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true
    - uses: pyTooling/download-artifact@v4
      with:
        name: github-pages
        tarball-name: artifact.tar
        path: .
    - name: Set up QEMU        
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:qemu-v7.0.0-28
    - name: Set up Docker Buildx        
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Package Registry        
      run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build & Push Docker image
      run:  cd ./dockers/remote_lab/ && docker buildx build -t ghcr.io/${{ github.repository_owner }}/creator_remote_lab:${GITHUB_SHA} -t ghcr.io/${{ github.repository_owner }}/creator_remote_lab -f ./Dockerfile  --push --platform=linux/amd64,linux/arm64,linux/arm/v7 .

  push-creator-hw-lab:    
    name: Push creator_remote_lab Docker Image
    needs: build-creator-hw-lab
    if: github.event_name != 'pull_request' && github.repository == 'creatorsim/creator'

    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub        
      env:          
        DH_TOKEN: ${{ secrets.DOCKER_HUB_PASSWORD }}               
      run: docker login -u creatorsim -p ${DH_TOKEN}
    - name: Re-tag & Push Docker Image to Docker Hub        
      run: |          
        chmod +r $HOME/.docker/config.json
        docker container run --rm --network host -v regctl-conf:/home/appuser/.regctl/ -v $HOME/.docker/config.json:/home/appuser/.docker/config.json regclient/regctl:v0.3.9 image copy ghcr.io/${{ github.repository_owner }}/creator_remote_lab:${GITHUB_SHA}  docker.io/creatorsim/creator_remote_lab:${GITHUB_SHA}
        docker container run --rm --network host -v regctl-conf:/home/appuser/.regctl/ -v $HOME/.docker/config.json:/home/appuser/.docker/config.json regclient/regctl:v0.3.9 image copy ghcr.io/${{ github.repository_owner }}/creator_remote_lab docker.io/creatorsim/creator_remote_lab
